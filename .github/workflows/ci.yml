name: CI
on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "**"

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
      - name: Install dependencies
        run: npm ci

      - name: Build for production
        run: npm run build

      - name: Upload build
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: ./dist
          retention-days: 5

  e2e_test:
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
      - name: Install dependencies
        run: npm ci

      - name: Download build
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run e2e tests
        run: npm run test:e2e

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: ./playwright-report
          retention-days: 30

  unit_test:
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
      - name: Install dependencies
        run: npm ci

      - name: Download build
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist

      - name: Run unit tests
        run: npm run test:unit

  deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: [build, e2e_test, unit_test]
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Download build
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist

      - name: Deploy to Netlify
        uses: netlify/actions/cli@master
        with:
          args: deploy --prod --dir=dist
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}

  deploy_preview:
    if: github.event_name == 'pull_request'
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Download build
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Deploy preview to Netlify
        uses: netlify/actions/cli@master
        with:
          args: deploy --dir=dist
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
